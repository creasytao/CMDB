# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hapi/rudder/rudder.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from hapi.release import info_pb2 as hapi_dot_release_dot_info__pb2
from hapi.release import release_pb2 as hapi_dot_release_dot_release__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='hapi/rudder/rudder.proto',
  package='hapi.services.rudder',
  syntax='proto3',
  serialized_pb=_b('\n\x18hapi/rudder/rudder.proto\x12\x14hapi.services.rudder\x1a\x17hapi/release/info.proto\x1a\x1ahapi/release/release.proto\"a\n\x06Result\x12\x0c\n\x04info\x18\x01 \x01(\t\x12\x0b\n\x03log\x18\x02 \x03(\t\"<\n\x06Status\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\r\n\tUNCHANGED\x10\x02\x12\t\n\x05\x45RROR\x10\x03\"\x17\n\x15VersionReleaseRequest\"7\n\x16VersionReleaseResponse\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\"?\n\x15InstallReleaseRequest\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\"n\n\x16InstallReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12,\n\x06result\x18\x02 \x01(\x0b\x32\x1c.hapi.services.rudder.Result\">\n\x14\x44\x65leteReleaseRequest\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\"m\n\x15\x44\x65leteReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12,\n\x06result\x18\x02 \x01(\x0b\x32\x1c.hapi.services.rudder.Result\"\xa6\x01\n\x15UpgradeReleaseRequest\x12&\n\x07\x63urrent\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12%\n\x06target\x18\x02 \x01(\x0b\x32\x15.hapi.release.Release\x12\x0f\n\x07Timeout\x18\x03 \x01(\x03\x12\x0c\n\x04Wait\x18\x04 \x01(\x08\x12\x10\n\x08Recreate\x18\x05 \x01(\x08\x12\r\n\x05\x46orce\x18\x06 \x01(\x08\"n\n\x16UpgradeReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12,\n\x06result\x18\x02 \x01(\x0b\x32\x1c.hapi.services.rudder.Result\"\xa7\x01\n\x16RollbackReleaseRequest\x12&\n\x07\x63urrent\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12%\n\x06target\x18\x02 \x01(\x0b\x32\x15.hapi.release.Release\x12\x0f\n\x07Timeout\x18\x03 \x01(\x03\x12\x0c\n\x04Wait\x18\x04 \x01(\x08\x12\x10\n\x08Recreate\x18\x05 \x01(\x08\x12\r\n\x05\x46orce\x18\x06 \x01(\x08\"o\n\x17RollbackReleaseResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12,\n\x06result\x18\x02 \x01(\x0b\x32\x1c.hapi.services.rudder.Result\">\n\x14ReleaseStatusRequest\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\"a\n\x15ReleaseStatusResponse\x12&\n\x07release\x18\x01 \x01(\x0b\x32\x15.hapi.release.Release\x12 \n\x04info\x18\x02 \x01(\x0b\x32\x12.hapi.release.Info2\xa6\x05\n\x14ReleaseModuleService\x12\x66\n\x07Version\x12+.hapi.services.rudder.VersionReleaseRequest\x1a,.hapi.services.rudder.VersionReleaseResponse\"\x00\x12m\n\x0eInstallRelease\x12+.hapi.services.rudder.InstallReleaseRequest\x1a,.hapi.services.rudder.InstallReleaseResponse\"\x00\x12j\n\rDeleteRelease\x12*.hapi.services.rudder.DeleteReleaseRequest\x1a+.hapi.services.rudder.DeleteReleaseResponse\"\x00\x12p\n\x0fRollbackRelease\x12,.hapi.services.rudder.RollbackReleaseRequest\x1a-.hapi.services.rudder.RollbackReleaseResponse\"\x00\x12m\n\x0eUpgradeRelease\x12+.hapi.services.rudder.UpgradeReleaseRequest\x1a,.hapi.services.rudder.UpgradeReleaseResponse\"\x00\x12j\n\rReleaseStatus\x12*.hapi.services.rudder.ReleaseStatusRequest\x1a+.hapi.services.rudder.ReleaseStatusResponse\"\x00\x42\x08Z\x06rudderb\x06proto3')
  ,
  dependencies=[hapi_dot_release_dot_info__pb2.DESCRIPTOR,hapi_dot_release_dot_release__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_RESULT_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='hapi.services.rudder.Result.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNCHANGED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=140,
  serialized_end=200,
)
_sym_db.RegisterEnumDescriptor(_RESULT_STATUS)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='hapi.services.rudder.Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='hapi.services.rudder.Result.info', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log', full_name='hapi.services.rudder.Result.log', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _RESULT_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=103,
  serialized_end=200,
)


_VERSIONRELEASEREQUEST = _descriptor.Descriptor(
  name='VersionReleaseRequest',
  full_name='hapi.services.rudder.VersionReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=225,
)


_VERSIONRELEASERESPONSE = _descriptor.Descriptor(
  name='VersionReleaseResponse',
  full_name='hapi.services.rudder.VersionReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='hapi.services.rudder.VersionReleaseResponse.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='hapi.services.rudder.VersionReleaseResponse.version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=227,
  serialized_end=282,
)


_INSTALLRELEASEREQUEST = _descriptor.Descriptor(
  name='InstallReleaseRequest',
  full_name='hapi.services.rudder.InstallReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.InstallReleaseRequest.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=284,
  serialized_end=347,
)


_INSTALLRELEASERESPONSE = _descriptor.Descriptor(
  name='InstallReleaseResponse',
  full_name='hapi.services.rudder.InstallReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.InstallReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='hapi.services.rudder.InstallReleaseResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=349,
  serialized_end=459,
)


_DELETERELEASEREQUEST = _descriptor.Descriptor(
  name='DeleteReleaseRequest',
  full_name='hapi.services.rudder.DeleteReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.DeleteReleaseRequest.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=461,
  serialized_end=523,
)


_DELETERELEASERESPONSE = _descriptor.Descriptor(
  name='DeleteReleaseResponse',
  full_name='hapi.services.rudder.DeleteReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.DeleteReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='hapi.services.rudder.DeleteReleaseResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=525,
  serialized_end=634,
)


_UPGRADERELEASEREQUEST = _descriptor.Descriptor(
  name='UpgradeReleaseRequest',
  full_name='hapi.services.rudder.UpgradeReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='current', full_name='hapi.services.rudder.UpgradeReleaseRequest.current', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='hapi.services.rudder.UpgradeReleaseRequest.target', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Timeout', full_name='hapi.services.rudder.UpgradeReleaseRequest.Timeout', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Wait', full_name='hapi.services.rudder.UpgradeReleaseRequest.Wait', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Recreate', full_name='hapi.services.rudder.UpgradeReleaseRequest.Recreate', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Force', full_name='hapi.services.rudder.UpgradeReleaseRequest.Force', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=637,
  serialized_end=803,
)


_UPGRADERELEASERESPONSE = _descriptor.Descriptor(
  name='UpgradeReleaseResponse',
  full_name='hapi.services.rudder.UpgradeReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.UpgradeReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='hapi.services.rudder.UpgradeReleaseResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=805,
  serialized_end=915,
)


_ROLLBACKRELEASEREQUEST = _descriptor.Descriptor(
  name='RollbackReleaseRequest',
  full_name='hapi.services.rudder.RollbackReleaseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='current', full_name='hapi.services.rudder.RollbackReleaseRequest.current', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target', full_name='hapi.services.rudder.RollbackReleaseRequest.target', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Timeout', full_name='hapi.services.rudder.RollbackReleaseRequest.Timeout', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Wait', full_name='hapi.services.rudder.RollbackReleaseRequest.Wait', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Recreate', full_name='hapi.services.rudder.RollbackReleaseRequest.Recreate', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Force', full_name='hapi.services.rudder.RollbackReleaseRequest.Force', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=918,
  serialized_end=1085,
)


_ROLLBACKRELEASERESPONSE = _descriptor.Descriptor(
  name='RollbackReleaseResponse',
  full_name='hapi.services.rudder.RollbackReleaseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.RollbackReleaseResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='hapi.services.rudder.RollbackReleaseResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1087,
  serialized_end=1198,
)


_RELEASESTATUSREQUEST = _descriptor.Descriptor(
  name='ReleaseStatusRequest',
  full_name='hapi.services.rudder.ReleaseStatusRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.ReleaseStatusRequest.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1200,
  serialized_end=1262,
)


_RELEASESTATUSRESPONSE = _descriptor.Descriptor(
  name='ReleaseStatusResponse',
  full_name='hapi.services.rudder.ReleaseStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='hapi.services.rudder.ReleaseStatusResponse.release', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='info', full_name='hapi.services.rudder.ReleaseStatusResponse.info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1264,
  serialized_end=1361,
)

_RESULT_STATUS.containing_type = _RESULT
_INSTALLRELEASEREQUEST.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_INSTALLRELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_INSTALLRELEASERESPONSE.fields_by_name['result'].message_type = _RESULT
_DELETERELEASEREQUEST.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_DELETERELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_DELETERELEASERESPONSE.fields_by_name['result'].message_type = _RESULT
_UPGRADERELEASEREQUEST.fields_by_name['current'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_UPGRADERELEASEREQUEST.fields_by_name['target'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_UPGRADERELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_UPGRADERELEASERESPONSE.fields_by_name['result'].message_type = _RESULT
_ROLLBACKRELEASEREQUEST.fields_by_name['current'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_ROLLBACKRELEASEREQUEST.fields_by_name['target'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_ROLLBACKRELEASERESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_ROLLBACKRELEASERESPONSE.fields_by_name['result'].message_type = _RESULT
_RELEASESTATUSREQUEST.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_RELEASESTATUSRESPONSE.fields_by_name['release'].message_type = hapi_dot_release_dot_release__pb2._RELEASE
_RELEASESTATUSRESPONSE.fields_by_name['info'].message_type = hapi_dot_release_dot_info__pb2._INFO
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['VersionReleaseRequest'] = _VERSIONRELEASEREQUEST
DESCRIPTOR.message_types_by_name['VersionReleaseResponse'] = _VERSIONRELEASERESPONSE
DESCRIPTOR.message_types_by_name['InstallReleaseRequest'] = _INSTALLRELEASEREQUEST
DESCRIPTOR.message_types_by_name['InstallReleaseResponse'] = _INSTALLRELEASERESPONSE
DESCRIPTOR.message_types_by_name['DeleteReleaseRequest'] = _DELETERELEASEREQUEST
DESCRIPTOR.message_types_by_name['DeleteReleaseResponse'] = _DELETERELEASERESPONSE
DESCRIPTOR.message_types_by_name['UpgradeReleaseRequest'] = _UPGRADERELEASEREQUEST
DESCRIPTOR.message_types_by_name['UpgradeReleaseResponse'] = _UPGRADERELEASERESPONSE
DESCRIPTOR.message_types_by_name['RollbackReleaseRequest'] = _ROLLBACKRELEASEREQUEST
DESCRIPTOR.message_types_by_name['RollbackReleaseResponse'] = _ROLLBACKRELEASERESPONSE
DESCRIPTOR.message_types_by_name['ReleaseStatusRequest'] = _RELEASESTATUSREQUEST
DESCRIPTOR.message_types_by_name['ReleaseStatusResponse'] = _RELEASESTATUSRESPONSE

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.Result)
  ))
_sym_db.RegisterMessage(Result)

VersionReleaseRequest = _reflection.GeneratedProtocolMessageType('VersionReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _VERSIONRELEASEREQUEST,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.VersionReleaseRequest)
  ))
_sym_db.RegisterMessage(VersionReleaseRequest)

VersionReleaseResponse = _reflection.GeneratedProtocolMessageType('VersionReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _VERSIONRELEASERESPONSE,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.VersionReleaseResponse)
  ))
_sym_db.RegisterMessage(VersionReleaseResponse)

InstallReleaseRequest = _reflection.GeneratedProtocolMessageType('InstallReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _INSTALLRELEASEREQUEST,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.InstallReleaseRequest)
  ))
_sym_db.RegisterMessage(InstallReleaseRequest)

InstallReleaseResponse = _reflection.GeneratedProtocolMessageType('InstallReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _INSTALLRELEASERESPONSE,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.InstallReleaseResponse)
  ))
_sym_db.RegisterMessage(InstallReleaseResponse)

DeleteReleaseRequest = _reflection.GeneratedProtocolMessageType('DeleteReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETERELEASEREQUEST,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.DeleteReleaseRequest)
  ))
_sym_db.RegisterMessage(DeleteReleaseRequest)

DeleteReleaseResponse = _reflection.GeneratedProtocolMessageType('DeleteReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _DELETERELEASERESPONSE,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.DeleteReleaseResponse)
  ))
_sym_db.RegisterMessage(DeleteReleaseResponse)

UpgradeReleaseRequest = _reflection.GeneratedProtocolMessageType('UpgradeReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPGRADERELEASEREQUEST,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.UpgradeReleaseRequest)
  ))
_sym_db.RegisterMessage(UpgradeReleaseRequest)

UpgradeReleaseResponse = _reflection.GeneratedProtocolMessageType('UpgradeReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _UPGRADERELEASERESPONSE,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.UpgradeReleaseResponse)
  ))
_sym_db.RegisterMessage(UpgradeReleaseResponse)

RollbackReleaseRequest = _reflection.GeneratedProtocolMessageType('RollbackReleaseRequest', (_message.Message,), dict(
  DESCRIPTOR = _ROLLBACKRELEASEREQUEST,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.RollbackReleaseRequest)
  ))
_sym_db.RegisterMessage(RollbackReleaseRequest)

RollbackReleaseResponse = _reflection.GeneratedProtocolMessageType('RollbackReleaseResponse', (_message.Message,), dict(
  DESCRIPTOR = _ROLLBACKRELEASERESPONSE,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.RollbackReleaseResponse)
  ))
_sym_db.RegisterMessage(RollbackReleaseResponse)

ReleaseStatusRequest = _reflection.GeneratedProtocolMessageType('ReleaseStatusRequest', (_message.Message,), dict(
  DESCRIPTOR = _RELEASESTATUSREQUEST,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.ReleaseStatusRequest)
  ))
_sym_db.RegisterMessage(ReleaseStatusRequest)

ReleaseStatusResponse = _reflection.GeneratedProtocolMessageType('ReleaseStatusResponse', (_message.Message,), dict(
  DESCRIPTOR = _RELEASESTATUSRESPONSE,
  __module__ = 'hapi.rudder.rudder_pb2'
  # @@protoc_insertion_point(class_scope:hapi.services.rudder.ReleaseStatusResponse)
  ))
_sym_db.RegisterMessage(ReleaseStatusResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\006rudder'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class ReleaseModuleServiceStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Version = channel.unary_unary(
          '/hapi.services.rudder.ReleaseModuleService/Version',
          request_serializer=VersionReleaseRequest.SerializeToString,
          response_deserializer=VersionReleaseResponse.FromString,
          )
      self.InstallRelease = channel.unary_unary(
          '/hapi.services.rudder.ReleaseModuleService/InstallRelease',
          request_serializer=InstallReleaseRequest.SerializeToString,
          response_deserializer=InstallReleaseResponse.FromString,
          )
      self.DeleteRelease = channel.unary_unary(
          '/hapi.services.rudder.ReleaseModuleService/DeleteRelease',
          request_serializer=DeleteReleaseRequest.SerializeToString,
          response_deserializer=DeleteReleaseResponse.FromString,
          )
      self.RollbackRelease = channel.unary_unary(
          '/hapi.services.rudder.ReleaseModuleService/RollbackRelease',
          request_serializer=RollbackReleaseRequest.SerializeToString,
          response_deserializer=RollbackReleaseResponse.FromString,
          )
      self.UpgradeRelease = channel.unary_unary(
          '/hapi.services.rudder.ReleaseModuleService/UpgradeRelease',
          request_serializer=UpgradeReleaseRequest.SerializeToString,
          response_deserializer=UpgradeReleaseResponse.FromString,
          )
      self.ReleaseStatus = channel.unary_unary(
          '/hapi.services.rudder.ReleaseModuleService/ReleaseStatus',
          request_serializer=ReleaseStatusRequest.SerializeToString,
          response_deserializer=ReleaseStatusResponse.FromString,
          )


  class ReleaseModuleServiceServicer(object):

    def Version(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def InstallRelease(self, request, context):
      """InstallRelease requests installation of a chart as a new release.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteRelease(self, request, context):
      """DeleteRelease requests deletion of a named release.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RollbackRelease(self, request, context):
      """RollbackRelease rolls back a release to a previous version.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpgradeRelease(self, request, context):
      """UpgradeRelease updates release content.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ReleaseStatus(self, request, context):
      """ReleaseStatus retrieves release status.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ReleaseModuleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Version': grpc.unary_unary_rpc_method_handler(
            servicer.Version,
            request_deserializer=VersionReleaseRequest.FromString,
            response_serializer=VersionReleaseResponse.SerializeToString,
        ),
        'InstallRelease': grpc.unary_unary_rpc_method_handler(
            servicer.InstallRelease,
            request_deserializer=InstallReleaseRequest.FromString,
            response_serializer=InstallReleaseResponse.SerializeToString,
        ),
        'DeleteRelease': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteRelease,
            request_deserializer=DeleteReleaseRequest.FromString,
            response_serializer=DeleteReleaseResponse.SerializeToString,
        ),
        'RollbackRelease': grpc.unary_unary_rpc_method_handler(
            servicer.RollbackRelease,
            request_deserializer=RollbackReleaseRequest.FromString,
            response_serializer=RollbackReleaseResponse.SerializeToString,
        ),
        'UpgradeRelease': grpc.unary_unary_rpc_method_handler(
            servicer.UpgradeRelease,
            request_deserializer=UpgradeReleaseRequest.FromString,
            response_serializer=UpgradeReleaseResponse.SerializeToString,
        ),
        'ReleaseStatus': grpc.unary_unary_rpc_method_handler(
            servicer.ReleaseStatus,
            request_deserializer=ReleaseStatusRequest.FromString,
            response_serializer=ReleaseStatusResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'hapi.services.rudder.ReleaseModuleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaReleaseModuleServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Version(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def InstallRelease(self, request, context):
      """InstallRelease requests installation of a chart as a new release.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteRelease(self, request, context):
      """DeleteRelease requests deletion of a named release.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RollbackRelease(self, request, context):
      """RollbackRelease rolls back a release to a previous version.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpgradeRelease(self, request, context):
      """UpgradeRelease updates release content.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ReleaseStatus(self, request, context):
      """ReleaseStatus retrieves release status.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaReleaseModuleServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Version(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    Version.future = None
    def InstallRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """InstallRelease requests installation of a chart as a new release.
      """
      raise NotImplementedError()
    InstallRelease.future = None
    def DeleteRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """DeleteRelease requests deletion of a named release.
      """
      raise NotImplementedError()
    DeleteRelease.future = None
    def RollbackRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """RollbackRelease rolls back a release to a previous version.
      """
      raise NotImplementedError()
    RollbackRelease.future = None
    def UpgradeRelease(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """UpgradeRelease updates release content.
      """
      raise NotImplementedError()
    UpgradeRelease.future = None
    def ReleaseStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """ReleaseStatus retrieves release status.
      """
      raise NotImplementedError()
    ReleaseStatus.future = None


  def beta_create_ReleaseModuleService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('hapi.services.rudder.ReleaseModuleService', 'DeleteRelease'): DeleteReleaseRequest.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'InstallRelease'): InstallReleaseRequest.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'ReleaseStatus'): ReleaseStatusRequest.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'RollbackRelease'): RollbackReleaseRequest.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'UpgradeRelease'): UpgradeReleaseRequest.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'Version'): VersionReleaseRequest.FromString,
    }
    response_serializers = {
      ('hapi.services.rudder.ReleaseModuleService', 'DeleteRelease'): DeleteReleaseResponse.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'InstallRelease'): InstallReleaseResponse.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'ReleaseStatus'): ReleaseStatusResponse.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'RollbackRelease'): RollbackReleaseResponse.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'UpgradeRelease'): UpgradeReleaseResponse.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'Version'): VersionReleaseResponse.SerializeToString,
    }
    method_implementations = {
      ('hapi.services.rudder.ReleaseModuleService', 'DeleteRelease'): face_utilities.unary_unary_inline(servicer.DeleteRelease),
      ('hapi.services.rudder.ReleaseModuleService', 'InstallRelease'): face_utilities.unary_unary_inline(servicer.InstallRelease),
      ('hapi.services.rudder.ReleaseModuleService', 'ReleaseStatus'): face_utilities.unary_unary_inline(servicer.ReleaseStatus),
      ('hapi.services.rudder.ReleaseModuleService', 'RollbackRelease'): face_utilities.unary_unary_inline(servicer.RollbackRelease),
      ('hapi.services.rudder.ReleaseModuleService', 'UpgradeRelease'): face_utilities.unary_unary_inline(servicer.UpgradeRelease),
      ('hapi.services.rudder.ReleaseModuleService', 'Version'): face_utilities.unary_unary_inline(servicer.Version),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ReleaseModuleService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('hapi.services.rudder.ReleaseModuleService', 'DeleteRelease'): DeleteReleaseRequest.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'InstallRelease'): InstallReleaseRequest.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'ReleaseStatus'): ReleaseStatusRequest.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'RollbackRelease'): RollbackReleaseRequest.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'UpgradeRelease'): UpgradeReleaseRequest.SerializeToString,
      ('hapi.services.rudder.ReleaseModuleService', 'Version'): VersionReleaseRequest.SerializeToString,
    }
    response_deserializers = {
      ('hapi.services.rudder.ReleaseModuleService', 'DeleteRelease'): DeleteReleaseResponse.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'InstallRelease'): InstallReleaseResponse.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'ReleaseStatus'): ReleaseStatusResponse.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'RollbackRelease'): RollbackReleaseResponse.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'UpgradeRelease'): UpgradeReleaseResponse.FromString,
      ('hapi.services.rudder.ReleaseModuleService', 'Version'): VersionReleaseResponse.FromString,
    }
    cardinalities = {
      'DeleteRelease': cardinality.Cardinality.UNARY_UNARY,
      'InstallRelease': cardinality.Cardinality.UNARY_UNARY,
      'ReleaseStatus': cardinality.Cardinality.UNARY_UNARY,
      'RollbackRelease': cardinality.Cardinality.UNARY_UNARY,
      'UpgradeRelease': cardinality.Cardinality.UNARY_UNARY,
      'Version': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'hapi.services.rudder.ReleaseModuleService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
