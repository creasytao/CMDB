!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALLOWED_HOSTS	OpManage/settings.py	/^ALLOWED_HOSTS = []$/;"	v
Api_urls	OpManage/urls.py	/^from Api import urls as Api_urls$/;"	i
BASE_DIR	OpManage/settings.py	/^BASE_DIR = os.path.dirname(os.path.dirname(__file__))$/;"	v
DATABASES	OpManage/settings.py	/^DATABASES = {$/;"	v
DEBUG	OpManage/settings.py	/^DEBUG = True$/;"	v
HttpResponse	Api/views.py	/^from django.http import HttpResponse$/;"	i
INSTALLED_APPS	OpManage/settings.py	/^INSTALLED_APPS = ($/;"	v
JSONParser	Api/views.py	/^from rest_framework.parsers import JSONParser$/;"	i
JSONRenderer	Api/views.py	/^from rest_framework.renderers import JSONRenderer$/;"	i
JSONResponse	Api/views.py	/^class JSONResponse(HttpResponse):$/;"	c
LANGUAGE_CHOICES	Api/models.py	/^LANGUAGE_CHOICES = sorted([(item[1][0], item[0]) for item in LEXERS])$/;"	v
LANGUAGE_CODE	OpManage/settings.py	/^LANGUAGE_CODE = 'en-us'$/;"	v
LEXERS	Api/models.py	/^LEXERS = [item for item in get_all_lexers() if item[1]]$/;"	v
MIDDLEWARE_CLASSES	OpManage/settings.py	/^MIDDLEWARE_CLASSES = ($/;"	v
Meta	Api/models.py	/^    class Meta:$/;"	c	class:Snippet
Meta	Api/serializer.py	/^    class Meta:$/;"	c	class:SnippetSerializer
Meta	Api/serializer.py	/^    class Meta:$/;"	c	class:UserSerializer
Migration	Api/migrations/0001_initial.py	/^class Migration(migrations.Migration):$/;"	c
ROOT_URLCONF	OpManage/settings.py	/^ROOT_URLCONF = 'OpManage.urls'$/;"	v
SECRET_KEY	OpManage/settings.py	/^SECRET_KEY = 'sou!vgfduy)*s*ay#_ylj_xm*&i**nyc7w-5m6-($0t%73qt+^'$/;"	v
STATIC_URL	OpManage/settings.py	/^STATIC_URL = '\/static\/'$/;"	v
STYLE_CHOICES	Api/models.py	/^STYLE_CHOICES = sorted((item, item) for item in get_all_styles())$/;"	v
Snippet	Api/models.py	/^class Snippet(models.Model):$/;"	c
SnippetSerializer	Api/serializer.py	/^class SnippetSerializer(serializers.ModelSerializer):$/;"	c
TEMPLATE_DEBUG	OpManage/settings.py	/^TEMPLATE_DEBUG = True$/;"	v
TIME_ZONE	OpManage/settings.py	/^TIME_ZONE = 'UTC'$/;"	v
TestCase	Api/tests.py	/^from django.test import TestCase$/;"	i
USE_I18N	OpManage/settings.py	/^USE_I18N = True$/;"	v
USE_L10N	OpManage/settings.py	/^USE_L10N = True$/;"	v
USE_TZ	OpManage/settings.py	/^USE_TZ = True$/;"	v
UserSerializer	Api/serializer.py	/^class UserSerializer(serializers.HyperlinkedModelSerializer):$/;"	c
UserViewSet	Api/views.py	/^class UserViewSet(viewsets.ModelViewSet):$/;"	c
WSGI_APPLICATION	OpManage/settings.py	/^WSGI_APPLICATION = 'OpManage.wsgi.application'$/;"	v
__init__	Api/views.py	/^    def __init__(self,data,**kwargs):$/;"	m	class:JSONResponse
admin	Api/admin.py	/^from django.contrib import admin$/;"	i
admin	OpManage/urls.py	/^from django.contrib import admin$/;"	i
application	OpManage/wsgi.py	/^application = get_wsgi_application()$/;"	v
code	Api/models.py	/^    code = models.TextField()$/;"	v	class:Snippet
created	Api/models.py	/^    created = models.DateTimeField(auto_now_add=True)$/;"	v	class:Snippet
csrf_exempt	Api/views.py	/^from django.views.decorators.csrf import csrf_exempt$/;"	i
default	Api/models.py	/^                                default='python',$/;"	v	class:Snippet
default	Api/models.py	/^                             default='friendly',$/;"	v	class:Snippet
dependencies	Api/migrations/0001_initial.py	/^    dependencies = [$/;"	v	class:Migration
execute_from_command_line	manage.py	/^    from django.core.management import execute_from_command_line$/;"	i
fields	Api/migrations/0001_initial.py	/^            fields=[$/;"	v	class:Migration
fields	Api/serializer.py	/^        fields = ('id', 'title', 'code', 'linenos', 'language', 'style')$/;"	v	class:SnippetSerializer.Meta
fields	Api/serializer.py	/^        fields = ('url', 'username', 'email', 'is_staff')$/;"	v	class:UserSerializer.Meta
get_all_lexers	Api/models.py	/^from pygments.lexers import get_all_lexers$/;"	i
get_all_styles	Api/models.py	/^from pygments.styles import get_all_styles$/;"	i
get_wsgi_application	OpManage/wsgi.py	/^from django.core.wsgi import get_wsgi_application$/;"	i
include	Api/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
include	OpManage/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
language	Api/models.py	/^    language = models.CharField(choices=LANGUAGE_CHOICES,$/;"	v	class:Snippet
linenos	Api/models.py	/^    linenos = models.BooleanField(default=False)$/;"	v	class:Snippet
max_length	Api/models.py	/^                                max_length=100)$/;"	v	class:Snippet
max_length	Api/models.py	/^                             max_length=100)$/;"	v	class:Snippet
migrations	Api/migrations/0001_initial.py	/^from django.db import models, migrations$/;"	i
model	Api/serializer.py	/^        model = Snippet$/;"	v	class:SnippetSerializer.Meta
model	Api/serializer.py	/^        model = User$/;"	v	class:UserSerializer.Meta
models	Api/migrations/0001_initial.py	/^from django.db import models, migrations$/;"	i
models	Api/models.py	/^from django.db import models$/;"	i
name	Api/migrations/0001_initial.py	/^            name='Snippet',$/;"	v	class:Migration
operations	Api/migrations/0001_initial.py	/^    operations = [$/;"	v	class:Migration
options	Api/migrations/0001_initial.py	/^            options={$/;"	v	class:Migration
ordering	Api/models.py	/^        ordering = ('created',)$/;"	v	class:Snippet.Meta
os	OpManage/settings.py	/^import os$/;"	i
os	OpManage/wsgi.py	/^import os$/;"	i
os	manage.py	/^import os$/;"	i
patterns	Api/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
patterns	OpManage/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
queryset	Api/views.py	/^    queryset = User.objects.all()$/;"	v	class:UserViewSet
render	Api/views.py	/^from django.shortcuts import render$/;"	i
router	Api/urls.py	/^router=routers.DefaultRouter()$/;"	v
routers	Api/urls.py	/^from rest_framework import routers$/;"	i
serializer_class	Api/views.py	/^    serializer_class = UserSerializer$/;"	v	class:UserViewSet
serializers	Api/serializer.py	/^from rest_framework import serializers$/;"	i
snippet_list	Api/views.py	/^def snippet_list(request):$/;"	f
style	Api/models.py	/^    style = models.CharField(choices=STYLE_CHOICES,$/;"	v	class:Snippet
sys	manage.py	/^import sys$/;"	i
title	Api/models.py	/^    title = models.CharField(max_length=100, default='')$/;"	v	class:Snippet
unicode_literals	Api/migrations/0001_initial.py	/^from __future__ import unicode_literals$/;"	i
url	Api/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
url	OpManage/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
urlpatterns	Api/urls.py	/^urlpatterns=patterns('',$/;"	v
urlpatterns	OpManage/urls.py	/^urlpatterns = patterns('',$/;"	v
viewsets	Api/views.py	/^from rest_framework import viewsets$/;"	i
widgets	Api/serializer.py	/^from django.forms import widgets$/;"	i
